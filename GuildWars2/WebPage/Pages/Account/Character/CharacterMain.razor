@page "/charactermain"
@using System.Text.Json;
@using System.Reflection.Metadata;
@using WebPage.Models.Account.Character.CharacterBag;
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient

@code {
    private string CharacterName = "";
    private List<CharacterBagMain> characterMainBags = new List<CharacterBagMain>();
    private string visibleSection = "equipment";
    private bool collapseNavMenu = true;
    private string? CharacterMainCssClass => collapseNavMenu ? "collapse" : null;


    private void ShowSection(string section)
    {
        visibleSection = section;

    }

    protected override  void OnInitialized()
    {
        NavigationManager.LocationChanged += OnCharacterNameChanged;
        
    }

    protected override void OnAfterRender(bool render)
    {
        if (render)
        {
            var uri = NavigationManager.Uri;
            var uriParams = new Uri(uri).Query;

            var queryString = System.Web.HttpUtility.ParseQueryString(uriParams);
            CharacterName = queryString["name"];
            GetCharacter();
            StateHasChanged();
        }

    }

    private void OnCharacterNameChanged(object sender, LocationChangedEventArgs args)
    {
        var uriParams = new Uri(args.Location).Query;
        var queryString = System.Web.HttpUtility.ParseQueryString(uriParams);
        CharacterName = queryString["name"];
        GetCharacter();
        StateHasChanged();
    }

    public void Dispose()
    {

        NavigationManager.LocationChanged -= OnCharacterNameChanged;
    }


    private async Task GetCharacter()
    {
        var response = await HttpClient.GetAsync($"https://localhost:7144/GW2/Data?data=v2/characters/{CharacterName}/inventory");
        if (response.IsSuccessStatusCode)
        {
            using (var stream = await response.Content.ReadAsStreamAsync())
            {

                characterMainBags = await JsonSerializer.DeserializeAsync<List<CharacterBagMain>>(stream);
                Console.WriteLine(characterMainBags.Count);
            }
        }
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}

<h1>@CharacterName</h1>
<div class="character-container">
    <div class="@CharacterMainCssClass nav-scrollable" @onclick="ToggleNavMenu">
        <nav class="flex-column">
            <div class="nav-item px-3">
                <NavLink class="nav-link"  @onclick='() => ShowSection("equipment")'>
                    <span class="oi oi-wrench" aria-hidden="true"></span> Equipment
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link"  @onclick='() => ShowSection("equipment")'>
                    <span class="oi oi-box" aria-hidden="true"></span> Inventory
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" @onclick='() => ShowSection("build")'>
                    <span class="oi oi-puzzle-piece" aria-hidden="true"></span> Build
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" @onclick='() => ShowSection("recipes")'>
                    <span class="oi oi-book" aria-hidden="true"></span> Recipes
                </NavLink>
            </div>
        </nav>
    </div>
    <div class="container mt-3">
        <div id="equipment" style="@(visibleSection == "equipment" ? "display: block;" : "display: none;")">
            <!-- Content for Section 1 -->
            <h2>Section 1</h2>
            <p>This is the content for Section 1.</p>
        </div>
        <div id="inventory" style="@(visibleSection == "inventory" ? "display: block;" : "display: none;")">
            <!-- Content for Section 2 -->
            <h2>Section 2</h2>
            <p>This is the content for Section 2.</p>
        </div>
        <div id="build" style="@(visibleSection == "build" ? "display: block;" : "display: none;")">
            <!-- Content for Section 3 -->
            <h2>Section 3</h2>
            <p>This is the content for Section 3.</p>
        </div>
        <div id="recipes" style="@(visibleSection == "recipes" ? "display: block;" : "display: none;")">
            <!-- Content for Section 4 -->
            <h2>Section 4</h2>
            <p>This is the content for Section 4.</p>
        </div>
    </div>
</div>